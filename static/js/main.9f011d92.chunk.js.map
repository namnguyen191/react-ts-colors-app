{"version":3,"sources":["GlobalCssConst.ts","ColorBox/styles.ts","ColorBox/ColorBox.tsx","Navbar/styles.ts","Navbar/Navbar.tsx","PaletteFooter/styles.ts","PaletteFooter/PaletteFooter.tsx","Palette/styles.ts","Palette/Palette.tsx","seedColors.ts","Utilities/colorHelper.ts","MiniPalette/styles.ts","MiniPalette/MiniPalette.tsx","PaletteList/styles.ts","PaletteList/PaletteList.tsx","SingleColorPalette/styles.ts","SingleColorPalette/SingleColorPalette.tsx","NewPaletteForm/styles.ts","DraggableColorBox/styles.ts","DraggableColorBox/DraggableColorBox.tsx","DraggableColorList/DraggableColorList.tsx","PaletteFormNav/styles.ts","PaletteMetaForm/PaletteMetaForm.tsx","PaletteFormNav/PaletteFormNav.tsx","ColorPickerForm/styles.ts","ColorPickerForm/ColorPickerForm.tsx","NewPaletteForm/NewPaletteForm.tsx","Page/styles.ts","Page/Page.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["DRAWER_WIDTH","sizes","size","xs","sm","md","lg","xl","styles","theme","createStyles","ColorBox","width","height","props","showLink","margin","display","position","cursor","marginBottom","opacity","copyText","color","chroma","luminance","colorName","seeMore","fontSize","background","border","right","bottom","textAlign","lineHeight","textTransform","copyButton","top","left","marginLeft","marginTop","outline","textDecoration","boxContent","padding","letterSpacing","copyOverlay","zIndex","transition","transform","showcopyOverlay","copyMessage","alignItems","justifyContent","flexDirection","fontWeight","textShadow","showCopyMessage","transitionDelay","state","copied","changeCopyState","bind","this","setState","setTimeout","name","moreUrl","classes","text","onCopy","className","style","to","onClick","e","stopPropagation","Component","withStyles","Navbar","logo","marginRight","backgroundColor","fontFamily","slider","boxShadow","selectContainer","messageId","format","open","handleFormatChange","closeSnackbar","target","value","handleChange","level","changeLevel","defaultValue","min","max","step","onAfterChange","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","toUpperCase","ContentProps","action","IconButton","aria-label","onClose","PaletteFooter","emoji","paletteName","Palette","PaletteColors","changeFormat","newLevel","val","palette","colors","id","colorBoxes","map","seedColors","levels","generatePalette","starterPalette","newPalette","hexColor","numberOfColors","scale","end","darken","hex","getRange","mode","reverse","i","push","toLowerCase","replace","rgb","css","rgba","root","borderRadius","overflow","title","paddingTop","miniColor","deleteIcon","memo","handleClick","openDialog","console","log","miniColorBoxes","event","minHeight","backgroundSize","animation","heading","container","flexWrap","nav","palettes","gridTemplateColumns","gap","backgroundPosition","PaletteList","openDeleteDialog","deletetingId","closeDialog","goToPalette","handleDelete","history","deletePalette","Button","variant","borderColor","TransitionGroup","CSSTransition","classNames","timeout","key","Dialog","aria-labelledby","DialogTitle","List","ListItem","button","ListItemAvatar","Avatar","blue","ListItemText","primary","red","goBack","SingleColorPalette","_shades","gatherShades","colorId","colorToFilterBy","shades","allColors","correctColor","filter","slice","React","useStyles","makeStyles","drawer","flexShrink","drawerPaper","drawerHeader","spacing","mixins","toolbar","content","flexGrow","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","buttons","SortableElement","onDelete","SortableContainer","deleteColor","index","appBar","appBarShift","menuButton","hide","navBtns","PaletteMetaForm","handleSubmit","hideForm","useState","newPaletteName","setNewPaletteName","stage","setStage","handleClose","useEffect","ValidatorForm","addValidationRule","every","onSelect","native","undefined","onSubmit","DialogContent","DialogContentText","label","fullWidth","validators","errorMessages","DialogActions","type","PaletteFormNav","handleDrawerOpen","formShowing","setFormShowing","CssBaseline","AppBar","clsx","Toolbar","edge","Typography","noWrap","picker","addColor","colorNameInput","ColorPickerForm","paletteIsFull","currentColor","setCurrentColor","newColorName","setNewColorName","onChangeComplete","newColor","instantValidate","placeholder","disabled","NewPaletteForm","savePalette","maxNumOfPalette","useTheme","setOpen","setColors","length","p","flat","Drawer","anchor","paper","direction","Divider","gutterBottom","addRandomColor","randomIndex","Math","floor","random","randomColor","findIndex","axis","onSortEnd","oldIndex","newIndex","arrayMove","distance","Page","children","App","window","localStorage","getItem","savedPalettes","JSON","parse","findPalette","syncLocalStorage","paletteFound","find","Error","st","setItem","stringify","render","location","exact","path","routeProps","slideDirection","match","params","paletteId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","htmlFontSize","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9f011d92.chunk.js","sourcesContent":["export const DRAWER_WIDTH = 400;\n\nexport const sizes = {\n  up() {},\n  down(size: 'xs' | 'sm' | 'md' | 'lg' | 'xl') {\n    const sizes = {\n      xs: '575.98px',\n      sm: '767.98px',\n      md: '991.98px',\n      lg: '1199.98px',\n      xl: '1600px'\n    };\n\n    return `@media (max-width: ${sizes[size]})`;\n  }\n};\n","import { createStyles, Theme } from '@material-ui/core';\nimport { ColorBoxProps } from '../Types/ComponentProps.type';\nimport chroma from 'chroma-js';\nimport { sizes } from '../GlobalCssConst';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ColorBox: {\n      width: '20%',\n      height: (props: ColorBoxProps) => (props.showLink ? '25%' : '50%'),\n      margin: '0 auto',\n      display: 'inline-block',\n      position: 'relative',\n      cursor: 'pointer',\n      marginBottom: '-0.35rem',\n      '&:hover': {\n        '& $copyButton': {\n          opacity: 1\n        }\n      },\n      [sizes.down('lg')]: {\n        width: '25%',\n        height: (props: ColorBoxProps) => (props.showLink ? '20%' : '33.333%')\n      },\n      [sizes.down('md')]: {\n        width: '50%',\n        height: (props: ColorBoxProps) => (props.showLink ? '10%' : '20%')\n      },\n      [sizes.down('xs')]: {\n        width: '100%',\n        height: (props: ColorBoxProps) => (props.showLink ? '5%' : '10%')\n      }\n    },\n    copyText: {\n      color: (props: ColorBoxProps) =>\n        chroma(props.color.color).luminance() >= 0.7 ? 'black' : 'white'\n    },\n    colorName: {\n      color: (props: ColorBoxProps) =>\n        chroma(props.color.color).luminance() <= 0.08 ? 'white' : 'black'\n    },\n    seeMore: {\n      color: (props: ColorBoxProps) =>\n        chroma(props.color.color).luminance() >= 0.7\n          ? 'rgba(0,0,0,0.6)'\n          : 'white',\n      fontSize: '1.6rem',\n      background: 'rgba(255, 255, 255, 0.3)',\n      position: 'absolute',\n      border: 'none',\n      right: '0',\n      bottom: '0',\n      width: '6rem',\n      height: '3rem',\n      textAlign: 'center',\n      lineHeight: '3rem',\n      textTransform: 'uppercase'\n    },\n    copyButton: {\n      color: (props: ColorBoxProps) =>\n        chroma(props.color.color).luminance() >= 0.7\n          ? 'rgba(0,0,0,0.6)'\n          : 'white',\n      width: '10rem',\n      height: '3rem',\n      position: 'absolute',\n      display: 'inline-block',\n      top: '50%',\n      left: '50%',\n      marginLeft: '-5rem',\n      marginTop: '-1.5rem',\n      textAlign: 'center',\n      outline: 'none',\n      background: 'rgba(255, 255, 255, 0.3)',\n      fontSize: '1.6rem',\n      lineHeight: '3rem',\n      textTransform: 'uppercase',\n      border: 'none',\n      textDecoration: 'none',\n      opacity: 0\n    },\n    boxContent: {\n      fontSize: '1.2rem',\n      position: 'absolute',\n      width: '100%',\n      left: 0,\n      bottom: 0,\n      padding: '1rem',\n      color: 'black',\n      letterSpacing: '0.1rem',\n      textTransform: 'uppercase'\n    },\n    copyOverlay: {\n      opacity: 0,\n      zIndex: 0,\n      width: '100%',\n      height: '100%',\n      transition: 'transform 0.6s ease-in-out',\n      transform: 'scale(0.1)'\n    },\n    showcopyOverlay: {\n      opacity: 1,\n      transform: 'scale(50)',\n      zIndex: 10,\n      position: 'absolute'\n    },\n    copyMessage: {\n      position: 'fixed',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      fontSize: '6.4rem',\n      transform: 'scale(0.1)',\n      opacity: 0,\n      color: 'white',\n      '& h1': {\n        fontWeight: 400,\n        textShadow: '0.1rem 0.2rem black',\n        background: 'rgba(255, 255, 255, 0.2)',\n        width: '100%',\n        textAlign: 'center',\n        marginBottom: 0,\n        padding: '1.6rem',\n        textTransform: 'uppercase',\n        [sizes.down('xs')]: {\n          fontSize: '6rem'\n        }\n      },\n      '& p': {\n        fontSize: '3.2rem',\n        fontWeight: 100\n      }\n    },\n    showCopyMessage: {\n      opacity: 1,\n      transform: 'scale(1)',\n      zIndex: 25,\n      transition: 'all 0.4s ease-in-out',\n      transitionDelay: '0.3s'\n    }\n  });\n\nexport default styles;\n","import { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport styles from './styles';\nimport { withStyles, WithStyles } from '@material-ui/styles';\nimport { ColorBoxProps } from '../Types/ComponentProps.type';\nimport { ColorBoxStates } from '../Types/ComponentStates.type';\n\ntype Props = ColorBoxProps & WithStyles<typeof styles>;\n\nclass ColorBox extends Component<Props, ColorBoxStates> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { copied: false };\n    this.changeCopyState = this.changeCopyState.bind(this);\n  }\n\n  changeCopyState() {\n    this.setState({ copied: true }, () => {\n      setTimeout(() => this.setState({ copied: false }), 1500);\n    });\n  }\n\n  render() {\n    const { name, color } = this.props.color;\n    const { moreUrl, showLink, classes } = this.props;\n    const { copied } = this.state;\n\n    return (\n      <CopyToClipboard text={color} onCopy={this.changeCopyState}>\n        <div className={classes.ColorBox} style={{ background: color }}>\n          <div\n            style={{ background: color }}\n            className={`${classes.copyOverlay} ${\n              copied && classes.showcopyOverlay\n            }`}\n          />\n          <div\n            className={`${classes.copyMessage} ${\n              copied && classes.showCopyMessage\n            }`}\n          >\n            <h1>copied!</h1>\n            <p className={classes.copyText}>{color}</p>\n          </div>\n          <div className=\"copy-container\">\n            <div className={classes.boxContent}>\n              <span className={classes.colorName}>{name}</span>\n            </div>\n            <button className={classes.copyButton}>Copy</button>\n          </div>\n          {showLink && (\n            <Link to={moreUrl} onClick={(e) => e.stopPropagation()}>\n              <span className={classes.seeMore}>MORE</span>\n            </Link>\n          )}\n        </div>\n      </CopyToClipboard>\n    );\n  }\n}\n\nexport default withStyles(styles)(ColorBox);\n","import { createStyles, Theme } from '@material-ui/core';\nimport { sizes } from '../GlobalCssConst';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    Navbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      height: '6vh'\n    },\n    logo: {\n      marginRight: '1.5rem',\n      padding: '0 1.3rem',\n      fontSize: '2.2rem',\n      backgroundColor: '#eceff1',\n      fontFamily: 'Roboto',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      '& a': {\n        textDecoration: 'none',\n        color: 'black'\n      },\n      [sizes.down('xs')]: {\n        display: 'none'\n      }\n    },\n    slider: {\n      width: '34rem',\n      margin: '0 1rem',\n      display: 'inline-block',\n      '& .rc-slider-rail': {\n        height: '0.8rem'\n      },\n      '& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:hover, .rc-slider-handle:focus': {\n        backgroundColor: 'green',\n        outline: 'none',\n        border: '0.2rem solid green',\n        boxShadow: 'none',\n        width: '1.3rem',\n        height: '1.3rem',\n        marginLeft: '-0.7rem',\n        marginTop: '-0.3rem'\n      },\n      [sizes.down('xs')]: {\n        width: '15rem'\n      },\n      '& .rc-slider-track': {\n        backgroundColor: 'transparent'\n      }\n    },\n    selectContainer: {\n      marginLeft: 'auto',\n      marginRight: '1.6rem'\n    },\n    messageId: {\n      fontSize: '1.6rem'\n    }\n  });\n\nexport default styles;\n","import Slider from 'rc-slider/lib/Slider';\nimport 'rc-slider/assets/index.css';\nimport { Component } from 'react';\nimport {\n  IconButton,\n  MenuItem,\n  Select,\n  Snackbar,\n  WithStyles\n} from '@material-ui/core';\nimport { ChangeEvent } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Link } from 'react-router-dom';\nimport { NavbarProps } from '../Types/ComponentProps.type';\nimport { NavbarStates } from '../Types/ComponentStates.type';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles';\n\ntype Props = NavbarProps & WithStyles<typeof styles>;\n\nclass Navbar extends Component<Props, NavbarStates> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { format: 'hex', open: false };\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n\n  handleFormatChange(\n    e: ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) {\n    if (\n      e.target.value === 'hex' ||\n      e.target.value === 'rgb' ||\n      e.target.value === 'rgba'\n    )\n      this.setState({ format: e.target.value, open: true });\n    if (\n      e.target.value === 'hex' ||\n      e.target.value === 'rgb' ||\n      e.target.value === 'rgba'\n    )\n      this.props.handleChange(e.target.value);\n  }\n\n  closeSnackbar() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const { level, changeLevel, classes } = this.props;\n    const { format } = this.state;\n\n    return (\n      <header className={classes.Navbar}>\n        <div className={classes.logo}>\n          <Link to=\"/\">reactcolorpicker</Link>\n        </div>\n        {level && (\n          <div className=\"slider-container\">\n            <span style={{ fontSize: '1.6rem' }}>Level: {level}</span>\n            <div className={classes.slider}>\n              <Slider\n                defaultValue={level}\n                min={100}\n                max={900}\n                step={100}\n                onAfterChange={changeLevel}\n              />\n            </div>\n          </div>\n        )}\n        <div className={classes.selectContainer}>\n          <Select\n            value={format}\n            onChange={this.handleFormatChange}\n            style={{ fontSize: '2rem' }}\n          >\n            <MenuItem value=\"hex\">HEX - #fffff</MenuItem>\n            <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n            <MenuItem value=\"rgba\">RGBA - rgba(255,255,255, 1.0)</MenuItem>\n          </Select>\n        </div>\n        <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n          open={this.state.open}\n          autoHideDuration={3000}\n          message={\n            <span className={classes.messageId}>\n              Format Changed To {format.toUpperCase()}!\n            </span>\n          }\n          ContentProps={{\n            'aria-describedby': 'message-id'\n          }}\n          action={[\n            <IconButton\n              onClick={this.closeSnackbar}\n              color=\"inherit\"\n              key=\"close\"\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n          onClose={this.closeSnackbar}\n        />\n      </header>\n    );\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n","import { createStyles, Theme } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    PaletteFooter: {\n      backgroundColor: 'white',\n      height: '5vh',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      fontWeight: 'bold',\n      fontSize: '1.6rem'\n    },\n    emoji: {\n      fontSize: '2.4rem',\n      margin: '0 1.6rem'\n    }\n  });\n\nexport default styles;\n","import { WithStyles } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { PaletteFooterProps } from '../Types/ComponentProps.type';\nimport styles from './styles';\n\ntype Props = PaletteFooterProps & WithStyles<typeof styles>;\n\nfunction PaletteFooter(props: Props) {\n  const { paletteName, emoji, classes } = props;\n  return (\n    <footer className={classes.PaletteFooter}>\n      {paletteName}\n      <span className={classes.emoji}>{emoji}</span>\n    </footer>\n  );\n}\n\nexport default withStyles(styles)(PaletteFooter);\n","import { createStyles, Theme } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    Palette: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    PaletteColors: {\n      height: '90%'\n    },\n    PaletteFooter: {\n      backgroundColor: 'white',\n      height: '5vh',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      fontWeight: 'bold',\n      fontSize: '1.6rem'\n    },\n    emoji: {\n      fontSize: '2.4rem',\n      margin: '0 1.6rem'\n    }\n  });\n\nexport default styles;\n","import { Component } from 'react';\nimport ColorBox from '../ColorBox/ColorBox';\n\nimport Navbar from '../Navbar/Navbar';\nimport PaletteFooter from '../PaletteFooter/PaletteFooter';\nimport { PaletteProps } from '../Types/ComponentProps.type';\nimport { PaletteStates } from '../Types/ComponentStates.type';\nimport { ColorFormat } from '../Types/Other.type';\nimport styles from './styles';\nimport { WithStyles } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\n\ntype Props = PaletteProps & WithStyles<typeof styles>;\n\nclass Palette extends Component<Props, PaletteStates> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { level: 500, format: 'hex' };\n    this.changeLevel = this.changeLevel.bind(this);\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  changeLevel(newLevel: number) {\n    this.setState({ level: newLevel });\n  }\n\n  changeFormat(val: ColorFormat) {\n    this.setState({ format: val });\n  }\n\n  render() {\n    const { colors, paletteName, emoji, id } = this.props.palette;\n    const { level, format } = this.state;\n    const { classes } = this.props;\n\n    const colorBoxes = colors[level].map((color) => (\n      <ColorBox\n        color={{\n          name: color.name,\n          color: color[format]\n        }}\n        key={color.name}\n        moreUrl={`/palette/${id}/${color.id}`}\n        showLink={true}\n      />\n    ));\n\n    return (\n      <div className={classes.Palette}>\n        <Navbar\n          level={level}\n          changeLevel={this.changeLevel}\n          handleChange={this.changeFormat}\n        />\n        <div className={classes.PaletteColors}>{colorBoxes}</div>\n        <PaletteFooter paletteName={paletteName} emoji={emoji} />\n      </div>\n    );\n  }\n}\n\nexport type PaletteChangeLevel = Palette['changeLevel'];\n\nexport default withStyles(styles)(Palette);\n","const seedColors = [\n  {\n    paletteName: 'Material UI Colors',\n    id: 'material-ui-colors',\n    emoji: '🎨',\n    colors: [\n      { name: 'red', color: '#F44336' },\n      { name: 'pink', color: '#E91E63' },\n      { name: 'purple', color: '#9C27B0' },\n      { name: 'deeppurple', color: '#673AB7' },\n      { name: 'indigo', color: '#3F51B5' },\n      { name: 'blue', color: '#2196F3' },\n      { name: 'lightblue', color: '#03A9F4' },\n      { name: 'cyan', color: '#00BCD4' },\n      { name: 'teal', color: '#009688' },\n      { name: 'green', color: '#4CAF50' },\n      { name: 'lightgreen', color: '#8BC34A' },\n      { name: 'lime', color: '#CDDC39' },\n      { name: 'yellow', color: '#FFEB3B' },\n      { name: 'amber', color: '#FFC107' },\n      { name: 'orange', color: '#FF9800' },\n      { name: 'deeporange', color: '#FF5722' },\n      { name: 'brown', color: '#795548' },\n      { name: 'grey', color: '#9E9E9E' },\n      { name: 'bluegrey', color: '#607D8B' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors v1',\n    id: 'flat-ui-colors-v1',\n    emoji: '🤙',\n    colors: [\n      { name: 'Turquoise', color: '#1abc9c' },\n      { name: 'Emerald', color: '#2ecc71' },\n      { name: 'PeterRiver', color: '#3498db' },\n      { name: 'Amethyst', color: '#9b59b6' },\n      { name: 'WetAsphalt', color: '#34495e' },\n      { name: 'GreenSea', color: '#16a085' },\n      { name: 'Nephritis', color: '#27ae60' },\n      { name: 'BelizeHole', color: '#2980b9' },\n      { name: 'Wisteria', color: '#8e44ad' },\n      { name: 'MidnightBlue', color: '#2c3e50' },\n      { name: 'SunFlower', color: '#f1c40f' },\n      { name: 'Carrot', color: '#e67e22' },\n      { name: 'Alizarin', color: '#e74c3c' },\n      { name: 'Clouds', color: '#ecf0f1' },\n      { name: 'Concrete', color: '#95a5a6' },\n      { name: 'Orange', color: '#f39c12' },\n      { name: 'Pumpkin', color: '#d35400' },\n      { name: 'Pomegranate', color: '#c0392b' },\n      { name: 'Silver', color: '#bdc3c7' },\n      { name: 'Asbestos', color: '#7f8c8d' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Dutch',\n    id: 'flat-ui-colors-dutch',\n    emoji: '🇮',\n    colors: [\n      { name: 'Sunflower', color: '#FFC312' },\n      { name: 'Energos', color: '#C4E538' },\n      { name: 'BlueMartina', color: '#12CBC4' },\n      { name: 'LavenderRose', color: '#FDA7DF' },\n      { name: 'BaraRose', color: '#ED4C67' },\n      { name: 'RadiantYellow', color: '#F79F1F' },\n      { name: 'AndroidGreen', color: '#A3CB38' },\n      { name: 'MediterraneanSea', color: '#1289A7' },\n      { name: 'LavenderTea', color: '#D980FA' },\n      { name: 'VerryBerry', color: '#B53471' },\n      { name: 'PuffinsBill', color: '#EE5A24' },\n      { name: 'PixelatedGrass', color: '#009432' },\n      { name: 'MerchantMarineBlue', color: '#0652DD' },\n      { name: 'ForgottenPurple', color: '#9980FA' },\n      { name: 'HollyHock', color: '#833471' },\n      { name: 'RedPigment', color: '#EA2027' },\n      { name: 'TurkishAqua', color: '#006266' },\n      { name: '20000LeaguesUnderTheSea', color: '#1B1464' },\n      { name: 'CircumorbitalRing', color: '#5758BB' },\n      { name: 'MagentaPurple', color: '#6F1E51' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors American',\n    id: 'flat-ui-colors-american',\n    emoji: '🇺🇸',\n    colors: [\n      { name: 'LightGreenishBlue', color: '#55efc4' },\n      { name: 'FadedPoster', color: '#81ecec' },\n      { name: 'GreenDarnerTail', color: '#74b9ff' },\n      { name: 'ShyMoment', color: '#a29bfe' },\n      { name: 'CityLights', color: '#dfe6e9' },\n      { name: 'MintLeaf', color: '#00b894' },\n      { name: 'RobinsEggBlue', color: '#00cec9' },\n      { name: 'ElectronBlue', color: '#0984e3' },\n      { name: 'ExodusFruit', color: '#6c5ce7' },\n      { name: 'SoothingBreeze', color: '#b2bec3' },\n      { name: 'SourLemon', color: '#ffeaa7' },\n      { name: 'FirstDate', color: '#fab1a0' },\n      { name: 'PinkGlamour', color: '#ff7675' },\n      { name: 'Pico8Pink', color: '#fd79a8' },\n      { name: 'AmericanRiver', color: '#636e72' },\n      { name: 'BrightYarrow', color: '#fdcb6e' },\n      { name: 'OrangeVille', color: '#e17055' },\n      { name: 'Chi-Gong', color: '#d63031' },\n      { name: 'PrunusAvium', color: '#e84393' },\n      { name: 'DraculaOrchid', color: '#2d3436' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Aussie',\n    id: 'flat-ui-colors-aussie',\n    emoji: '🎨',\n    colors: [\n      { name: 'Beekeeper', color: '#f6e58d' },\n      { name: 'SpicedNectarine', color: '#ffbe76' },\n      { name: 'PinkGlamour', color: '#ff7979' },\n      { name: 'JuneBud', color: '#badc58' },\n      { name: 'CoastalBreeze', color: '#dff9fb' },\n      { name: 'Turbo', color: '#f9ca24' },\n      { name: 'QuinceJelly', color: '#f0932b' },\n      { name: 'CarminePink', color: '#eb4d4b' },\n      { name: 'PureApple', color: '#6ab04c' },\n      { name: 'HintOfIcePack', color: '#c7ecee' },\n      { name: 'MiddleBlue', color: '#7ed6df' },\n      { name: 'Heliotrope', color: '#e056fd' },\n      { name: 'ExodusFruit', color: '#686de0' },\n      { name: 'DeepKoamaru', color: '#30336b' },\n      { name: 'SoaringEagle', color: '#95afc0' },\n      { name: 'GreenlandGreen', color: '#22a6b3' },\n      { name: 'SteelPink', color: '#be2edd' },\n      { name: 'Blurple', color: '#4834d4' },\n      { name: 'DeepCove', color: '#130f40' },\n      { name: 'WizardGrey', color: '#535c68' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors British',\n    id: 'flat-ui-colors-british',\n    emoji: '🇬🇧',\n    colors: [\n      { name: 'ProtossPylon', color: '#00a8ff' },\n      { name: 'Periwinkle', color: '#9c88ff' },\n      { name: 'Rise-N-Shine', color: '#fbc531' },\n      { name: 'DownloadProgress', color: '#4cd137' },\n      { name: 'Seabrook', color: '#487eb0' },\n      { name: 'VanaDylBlue', color: '#0097e6' },\n      { name: 'MattPurple', color: '#8c7ae6' },\n      { name: 'NanohanachaGold', color: '#e1b12c' },\n      { name: 'SkirretGreen', color: '#44bd32' },\n      { name: 'Naval', color: '#40739e' },\n      { name: 'NasturcianFlower', color: '#e84118' },\n      { name: 'LynxWhite', color: '#f5f6fa' },\n      { name: 'BlueberrySoda', color: '#7f8fa6' },\n      { name: 'MazarineBlue', color: '#273c75' },\n      { name: 'BlueNights', color: '#353b48' },\n      { name: 'HarleyOrange', color: '#c23616' },\n      { name: 'HintOfPensive', color: '#dcdde1' },\n      { name: 'ChainGangGrey', color: '#718093' },\n      { name: 'PicoVoid', color: '#192a56' },\n      { name: 'ElectroMagnetic', color: '#2f3640' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Spanish',\n    id: 'flat-ui-colors-spanish',\n    emoji: '🇪🇸',\n    colors: [\n      { name: 'JacksonsPurple', color: '#40407a' },\n      { name: 'C64Purple', color: '#706fd3' },\n      { name: 'SwanWhite', color: '#f7f1e3' },\n      { name: 'SummerSky', color: '#34ace0' },\n      { name: 'CelestialGreen', color: '#33d9b2' },\n      { name: 'LuckyPoint', color: '#2c2c54' },\n      { name: 'Liberty', color: '#474787' },\n      { name: 'HotStone', color: '#aaa69d' },\n      { name: 'DevilBlue', color: '#227093' },\n      { name: 'PalmSpringsSplash', color: '#218c74' },\n      { name: 'FlourescentRed', color: '#ff5252' },\n      { name: 'SyntheticPumpkin', color: '#ff793f' },\n      { name: 'CrocodileTooth', color: '#d1ccc0' },\n      { name: 'MandarinSorbet', color: '#ffb142' },\n      { name: 'SpicedButterNut', color: '#ffda79' },\n      { name: 'EyeOfNewt', color: '#b33939' },\n      { name: 'ChileanFire', color: '#cd6133' },\n      { name: 'GreyPorcelain', color: '#84817a' },\n      { name: 'AlamedaOchre', color: '#cc8e35' },\n      { name: 'Desert', color: '#ccae62' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors Indian',\n    id: 'flat-ui-colors-indian',\n    emoji: '🇮🇳',\n    colors: [\n      { name: 'OrchidOrange', color: '#FEA47F' },\n      { name: 'SpiroDiscoBall', color: '#25CCF7' },\n      { name: 'HoneyGlow', color: '#EAB543' },\n      { name: 'SweetGarden', color: '#55E6C1' },\n      { name: 'FallingStar', color: '#CAD3C8' },\n      { name: 'RichGardenia', color: '#F97F51' },\n      { name: 'ClearChill', color: '#1B9CFC' },\n      { name: 'WhitePepper', color: '#F8EFBA' },\n      { name: 'Keppel', color: '#58B19F' },\n      { name: 'ShipsOfficer', color: '#2C3A47' },\n      { name: 'FieryFuchsia', color: '#B33771' },\n      { name: 'BlueBell', color: '#3B3B98' },\n      { name: 'GeorgiaPeach', color: '#FD7272' },\n      { name: 'OasisStream', color: '#9AECDB' },\n      { name: 'BrightUbe', color: '#D6A2E8' },\n      { name: 'MagentaPurple', color: '#6D214F' },\n      { name: 'EndingNavyBlue', color: '#182C61' },\n      { name: 'SasquatchSocks', color: '#FC427B' },\n      { name: 'PineGlade', color: '#BDC581' },\n      { name: 'HighlighterLavender', color: '#82589F' }\n    ]\n  },\n  {\n    paletteName: 'Flat UI Colors French',\n    id: 'flat-ui-colors-french',\n    emoji: '🇫🇷',\n    colors: [\n      { name: 'FlatFlesh', color: '#fad390' },\n      { name: 'MelonMelody', color: '#f8c291' },\n      { name: 'Livid', color: '#6a89cc' },\n      { name: 'Spray', color: '#82ccdd' },\n      { name: 'ParadiseGreen', color: '#b8e994' },\n      { name: 'SquashBlossom', color: '#f6b93b' },\n      { name: 'MandarinRed', color: '#e55039' },\n      { name: 'AzraqBlue', color: '#4a69bd' },\n      { name: 'Dupain', color: '#60a3bc' },\n      { name: 'AuroraGreen', color: '#78e08f' },\n      { name: 'IcelandPoppy', color: '#fa983a' },\n      { name: 'TomatoRed', color: '#eb2f06' },\n      { name: 'YueGuangBlue', color: '#1e3799' },\n      { name: 'GoodSamaritan', color: '#3c6382' },\n      { name: 'Waterfall', color: '#38ada9' },\n      { name: 'CarrotOrange', color: '#e58e26' },\n      { name: 'JalapenoRed', color: '#b71540' },\n      { name: 'DarkSapphire', color: '#0c2461' },\n      { name: 'ForestBlues', color: '#0a3d62' },\n      { name: 'ReefEncounter', color: '#079992' }\n    ]\n  }\n];\n\nexport default seedColors;\n","import chroma from 'chroma-js';\nimport { GeneratedPaletteObj, PaletteObj } from '../Types/DataModels.type';\n\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nexport function generatePalette(starterPalette: PaletteObj) {\n  let newPalette: GeneratedPaletteObj = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  };\n\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n\n  for (let color of starterPalette.colors) {\n    let scale = generateScale(color.color, 10).reverse();\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: `${color.name} ${levels[i]}`,\n        id: color.name.toLowerCase().replace(/ /g, '-'),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i])\n          .css()\n          .replace('rgb', 'rgba')\n          .replace(')', ', 1.0)')\n      });\n    }\n  }\n\n  return newPalette;\n}\n\nfunction getRange(hexColor: string) {\n  const end = '#fff';\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\n}\n\nfunction generateScale(hexColor: string, numberOfColors: number) {\n  return chroma.scale(getRange(hexColor)).mode('lab').colors(numberOfColors);\n}\n","import { createStyles, Theme } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: 'white',\n      border: '1px solid black',\n      borderRadius: '.5rem',\n      padding: '0.8rem',\n      position: 'relative',\n      overflow: 'hidden',\n      cursor: 'pointer',\n      '&:hover svg': {\n        opacity: 1\n      }\n    },\n    colors: {\n      backgroundColor: '#dae1e4',\n      height: '15rem',\n      width: '100%',\n      borderRadius: '.5rem',\n      overflow: 'hidden'\n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      margin: '0',\n      color: 'black',\n      paddingTop: '0.8rem',\n      fontSize: '1.6rem',\n      position: 'relative'\n    },\n    emoji: {\n      marginLeft: '0.8rem',\n      fontSize: '2.4rem'\n    },\n    miniColor: {\n      height: '25%',\n      width: '20%',\n      display: 'inline-block',\n      margin: '0 auto',\n      position: 'relative',\n      marginBottom: '-.35rem'\n    },\n    deleteIcon: {\n      color: 'white',\n      backgroundColor: '#eb3d30',\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      zIndex: 10,\n      opacity: 0,\n      transition: 'all .3s ease-in-out'\n    }\n  });\n\nexport default styles;\n","import { WithStyles } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { MiniPaletteProps } from '../Types/ComponentProps.type';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styles from './styles';\nimport { memo } from 'react';\n\ntype Props = MiniPaletteProps & WithStyles<typeof styles>;\n\nfunction MiniPalette(props: Props) {\n  const {\n    classes,\n    paletteName,\n    emoji,\n    colors,\n    handleClick,\n    id,\n    openDialog\n  } = props;\n\n  console.log('Minipallete: ', paletteName);\n\n  const miniColorBoxes = colors.map((color) => (\n    <div\n      className={classes.miniColor}\n      style={{ backgroundColor: color.color }}\n      key={color.name}\n    ></div>\n  ));\n\n  const deletePalette = (\n    event: React.MouseEvent<SVGSVGElement, MouseEvent>\n  ) => {\n    event.stopPropagation();\n    openDialog(id);\n  };\n\n  return (\n    <div className={classes.root} onClick={() => handleClick(id)}>\n      <DeleteIcon className={classes.deleteIcon} onClick={deletePalette} />\n      <div className={classes.colors}>{miniColorBoxes}</div>\n      <h5 className={classes.title}>\n        {paletteName} <span className={classes.emoji}>{emoji}</span>\n      </h5>\n    </div>\n  );\n}\n\nexport default memo(withStyles(styles)(MiniPalette));\n","import { createStyles, Theme } from '@material-ui/core';\nimport { sizes } from '../GlobalCssConst';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    '@global': {\n      '.item-enter': {\n        opacity: 0\n      },\n      '.item-enter-active': {\n        opacity: 1,\n        transition: 'opacity 300ms ease-in'\n      },\n      '.item-exit': {\n        opacity: 1\n      },\n      '.item-exit-active': {\n        opacity: 0,\n        transition: 'opacity 300ms ease-in'\n      }\n    },\n    root: {\n      backgroundColor: 'blue',\n      minHeight: '100vh',\n      display: 'flex',\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      background: 'linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab)',\n      backgroundSize: '400% 400%',\n      animation: '$gradient 10s ease infinite'\n    },\n    heading: {\n      fontSize: '3.2rem'\n    },\n    container: {\n      width: '50%',\n      display: 'flex',\n      alignItems: 'flex-start',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      [sizes.down('xl')]: {\n        width: '80%'\n      },\n      [sizes.down('xs')]: {\n        width: '70%'\n      }\n    },\n    nav: {\n      display: 'flex',\n      width: '100%',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      color: 'white',\n      fontSize: '1.6rem',\n      margin: '2rem',\n      '& a': {\n        color: 'white',\n        textDecoration: 'none'\n      }\n    },\n    palettes: {\n      width: '100%',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gap: '2rem',\n      marginBottom: '2rem',\n      [sizes.down('md')]: {\n        gridTemplateColumns: '1fr 1fr'\n      },\n      [sizes.down('xs')]: {\n        gridTemplateColumns: '1fr'\n      }\n    },\n    '@keyframes gradient': {\n      '0%': {\n        backgroundPosition: '0% 50%'\n      },\n      '50%': {\n        backgroundPosition: '100% 50%'\n      },\n      '100%': {\n        backgroundPosition: '0% 50%'\n      }\n    }\n  });\n\nexport default styles;\n","import {\n  WithStyles,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MiniPalette from '../MiniPalette/MiniPalette';\nimport { PaletteListProps } from '../Types/ComponentProps.type';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue, red } from '@material-ui/core/colors';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ntype PalleteListStates = {\n  openDeleteDialog: boolean;\n  deletetingId: string;\n};\n\ntype Props = PaletteListProps & WithStyles<typeof styles>;\n\nclass PaletteList extends Component<Props, PalleteListStates> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDeleteDialog: false,\n      deletetingId: ''\n    };\n    this.openDialog = this.openDialog.bind(this);\n    this.closeDialog = this.closeDialog.bind(this);\n    this.goToPalette = this.goToPalette.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  openDialog(id: string) {\n    this.setState({ openDeleteDialog: true, deletetingId: id });\n  }\n\n  closeDialog() {\n    this.setState({ openDeleteDialog: false, deletetingId: '' });\n  }\n\n  goToPalette(id: string) {\n    this.props.history.push(`/palette/${id}`);\n  }\n\n  handleDelete() {\n    this.props.deletePalette(this.state.deletetingId);\n    this.closeDialog();\n  }\n\n  render() {\n    const { palettes, classes } = this.props;\n    const { openDeleteDialog } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.container}>\n          <nav className={classes.nav}>\n            <h1 className={classes.heading}>React Colors</h1>\n            <Link to=\"/palette/new\">\n              <Button\n                variant=\"outlined\"\n                style={{ color: 'white', borderColor: 'white' }}\n              >\n                Create a New Palette\n              </Button>\n            </Link>\n          </nav>\n          <TransitionGroup className={classes.palettes}>\n            {palettes.map((palette) => (\n              <CSSTransition key={palette.id} classNames=\"item\" timeout={300}>\n                <MiniPalette\n                  {...palette}\n                  handleClick={this.goToPalette}\n                  openDialog={this.openDialog}\n                  id={palette.id}\n                  key={palette.id}\n                />\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </div>\n        <Dialog\n          open={openDeleteDialog}\n          aria-labelledby=\"delete-dialog-title\"\n          onClose={this.closeDialog}\n        >\n          <DialogTitle id=\"delete-dialog-title\">\n            Delete This Palette?\n          </DialogTitle>\n          <List>\n            <ListItem button onClick={this.handleDelete}>\n              <ListItemAvatar>\n                <Avatar\n                  style={{ backgroundColor: blue[100], color: blue[600] }}\n                >\n                  <CheckIcon></CheckIcon>\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Delete\" />\n            </ListItem>\n            <ListItem button onClick={this.closeDialog}>\n              <ListItemAvatar>\n                <Avatar style={{ backgroundColor: red[100], color: red[600] }}>\n                  <CloseIcon></CloseIcon>\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Cancel\" />\n            </ListItem>\n          </List>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(PaletteList);\n","import { createStyles, Theme } from '@material-ui/core';\nimport { sizes } from '../GlobalCssConst';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    Palette: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    PaletteColors: {\n      height: '90%'\n    },\n    goBack: {\n      width: '20%',\n      height: '50%',\n      margin: '0 auto',\n      display: 'inline-block',\n      position: 'relative',\n      cursor: 'pointer',\n      marginBottom: '-0.35rem',\n      opacity: 1,\n      backgroundColor: 'black',\n      '& a': {\n        color: 'white',\n        width: '10rem',\n        height: '3rem',\n        position: 'absolute',\n        display: 'inline-block',\n        top: '50%',\n        left: '50%',\n        marginLeft: '-5rem',\n        marginTop: '-1.5rem',\n        textAlign: 'center',\n        outline: 'none',\n        background: 'rgba(255, 255, 255, 0.3)',\n        fontSize: '1.6rem',\n        lineHeight: '3rem',\n        textTransform: 'uppercase',\n        border: 'none',\n        textDecoration: 'none'\n      },\n      [sizes.down('lg')]: {\n        height: '33.333%',\n        width: '25%'\n      },\n      [sizes.down('md')]: {\n        height: '20%',\n        width: '50%'\n      },\n      [sizes.down('xs')]: {\n        height: '10%',\n        width: '100%'\n      }\n    }\n  });\n\nexport default styles;\n","import { WithStyles } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport ColorBox from '../ColorBox/ColorBox';\nimport Navbar from '../Navbar/Navbar';\nimport PaletteFooter from '../PaletteFooter/PaletteFooter';\nimport { SingleColorPaletteProps } from '../Types/ComponentProps.type';\nimport { SingleColorPaletteStates } from '../Types/ComponentStates.type';\nimport { GeneratedPaletteObj } from '../Types/DataModels.type';\nimport { ColorFormat, ColorLevel } from '../Types/Other.type';\nimport styles from './styles';\n\ntype Props = SingleColorPaletteProps & WithStyles<typeof styles>;\n\nclass SingleColorPalette extends React.Component<\n  Props,\n  SingleColorPaletteStates\n> {\n  private _shades: ColorLevel[];\n  constructor(props: Props) {\n    super(props);\n    this._shades = this.gatherShades(this.props.palette, this.props.colorId);\n    this.state = { format: 'hex' };\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  gatherShades(palette: GeneratedPaletteObj, colorToFilterBy: string) {\n    // Return all shades of given color\n    let shades: ColorLevel[] = [];\n    let allColors = palette.colors;\n    for (let key in allColors) {\n      const correctColor = allColors[key].filter(\n        (color) => color.id === colorToFilterBy\n      );\n      shades.push(correctColor[0]);\n    }\n    // Remove value at 50\n    return shades.slice(1);\n  }\n\n  changeFormat(val: ColorFormat) {\n    this.setState({ format: val });\n  }\n\n  render() {\n    const { format } = this.state;\n    const { paletteName, emoji, id } = this.props.palette;\n    const { classes } = this.props;\n\n    const colorBoxes = this._shades.map((color) => (\n      <ColorBox\n        color={{ name: color.name, color: color[format] }}\n        showLink={false}\n        moreUrl=\"/\"\n        key={`${color.id + color.name}`}\n      />\n    ));\n\n    return (\n      <div className={classes.Palette}>\n        <Navbar handleChange={this.changeFormat} />\n        <div className={classes.PaletteColors}>\n          {colorBoxes}\n          <div className={classes.goBack}>\n            <Link to={`/palette/${id}`} className=\"back-button\">\n              GO BACK\n            </Link>\n          </div>\n        </div>\n        <PaletteFooter paletteName={paletteName} emoji={emoji} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SingleColorPalette);\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { DRAWER_WIDTH } from '../GlobalCssConst';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      lineHeight: 0\n    },\n    drawer: {\n      width: DRAWER_WIDTH,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: DRAWER_WIDTH,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end'\n    },\n    content: {\n      flexGrow: 1,\n      height: 'calc(100vh - 64px)',\n      padding: 0,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginLeft: -DRAWER_WIDTH\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: 0\n    },\n    container: {\n      width: '90%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    buttons: {\n      width: '100%'\n    },\n    button: {\n      width: '50%'\n    }\n  })\n);\n\nexport default useStyles;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport chroma from 'chroma-js';\nimport { sizes } from '../GlobalCssConst';\nimport { DraggableColorBoxProps } from './DraggableColorBox';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '20%',\n      height: '25%',\n      margin: '0 auto',\n      display: 'inline-block',\n      position: 'relative',\n      cursor: 'pointer',\n      marginBottom: 0,\n      '&:hover $deleteIcon': {\n        color: 'white',\n        transform: 'scale(1.5)',\n        [sizes.down('md')]: {\n          transform: 'scale(1)'\n        }\n      },\n      [sizes.down('lg')]: {\n        width: '25%',\n        height: '20%'\n      },\n      [sizes.down('md')]: {\n        width: '50%',\n        height: '10%'\n      },\n      [sizes.down('sm')]: {\n        width: '100%',\n        height: '5%'\n      }\n    },\n    boxContent: {\n      fontSize: '1.2rem',\n      position: 'absolute',\n      width: '100%',\n      left: 0,\n      bottom: 0,\n      padding: '1rem',\n      color: (props: DraggableColorBoxProps) =>\n        chroma(props.color.color).luminance() <= 0.08\n          ? 'rgba(255,255,255,0.8)'\n          : 'rgba(0,0,0,0.6)',\n      letterSpacing: '0.1rem',\n      textTransform: 'uppercase',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      [sizes.down('md')]: {\n        padding: 0\n      }\n    },\n    deleteIcon: {\n      transition: 'all 0.3s ease-in-out',\n      [sizes.down('md')]: {\n        marginRight: '1rem'\n      }\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Color } from '../Types/DataModels.type';\n\nimport useStyles from './styles';\nimport { SortableElement } from 'react-sortable-hoc';\n\nexport type DraggableColorBoxProps = {\n  color: Color;\n  onDelete: (colorName: string) => void;\n};\n\nconst DraggableColorBox: React.FC<DraggableColorBoxProps> = (props) => {\n  const { color, onDelete } = props;\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root} style={{ backgroundColor: color.color }}>\n      <div className={classes.boxContent}>\n        <span>{color.name}</span>\n        <DeleteIcon\n          className={classes.deleteIcon}\n          onClick={() => onDelete(color.name)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SortableElement(DraggableColorBox);\n","import React from 'react';\nimport { SortableContainer } from 'react-sortable-hoc';\nimport DraggableColorBox from '../DraggableColorBox/DraggableColorBox';\nimport { Color } from '../Types/DataModels.type';\n\nexport type DraggableColorListProps = {\n  colors: Color[];\n  deleteColor: (colorName: string) => void;\n};\n\nconst DraggableColorList: React.FC<DraggableColorListProps> = ({\n  colors,\n  deleteColor\n}) => {\n  return (\n    <div style={{ height: '100%' }}>\n      {colors.map((color, index) => (\n        <DraggableColorBox\n          key={color.name}\n          color={color}\n          onDelete={deleteColor}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default SortableContainer(DraggableColorList);\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { DRAWER_WIDTH } from '../GlobalCssConst';\nimport { sizes } from '../GlobalCssConst';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      height: '6.4rem'\n    },\n    appBarShift: {\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\n      marginLeft: DRAWER_WIDTH,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    hide: {\n      display: 'none'\n    },\n    navBtns: {\n      marginRight: '1.6rem',\n      '& a': {\n        textDecoration: 'none'\n      },\n      [sizes.down('xs')]: {\n        marginRight: '0.8rem'\n      }\n    },\n    button: {\n      margin: '0 0.8rem',\n      [sizes.down('xs')]: {\n        margin: 0\n      },\n      '& a': {\n        textDecoration: 'none'\n      }\n    }\n  })\n);\n\nexport default useStyles;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport { PaletteObj } from '../Types/DataModels.type';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker, BaseEmoji } from 'emoji-mart';\n\nexport type PaletteMetaFormProps = {\n  palettes: PaletteObj[];\n  handleSubmit: (paletteName: string, emoji: string) => void;\n  hideForm: () => void;\n};\n\nconst PaletteMetaForm: React.FC<PaletteMetaFormProps> = ({\n  palettes,\n  handleSubmit,\n  hideForm\n}) => {\n  const [newPaletteName, setNewPaletteName] = React.useState('');\n  const [stage, setStage] = React.useState<'form' | 'emoji' | undefined>(\n    'form'\n  );\n\n  const handleClose = () => {\n    hideForm();\n  };\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPaletteNameUnique', (value: string) => {\n      return palettes.every(\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n      );\n    });\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.name === 'newPaletteName') {\n      setNewPaletteName(event.target.value);\n    }\n  };\n\n  const showEmojiPicker = () => {\n    setStage('emoji');\n  };\n\n  const savePalette = (emoji: BaseEmoji) => {\n    handleSubmit(newPaletteName, emoji.native);\n    setStage(undefined);\n  };\n\n  return (\n    <div>\n      <Dialog open={stage === 'emoji'} onClose={handleClose}>\n        <DialogTitle id=\"form-dialog-title\">Choose a Palette Emoji</DialogTitle>\n        <Picker onSelect={savePalette} title=\"Pick a Palette Emoji\" />\n      </Dialog>\n      <Dialog\n        open={stage === 'form'}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Choose A Palette Name</DialogTitle>\n        <ValidatorForm onSubmit={showEmojiPicker}>\n          <DialogContent>\n            <DialogContentText>\n              Please enter a name for your new beautiful palette, Make sure it's\n              unique!\n            </DialogContentText>\n            <TextValidator\n              name=\"newPaletteName\"\n              value={newPaletteName}\n              label=\"Palette Name\"\n              onChange={handleChange}\n              fullWidth\n              margin=\"normal\"\n              validators={['required', 'isPaletteNameUnique']}\n              errorMessages={['Enter Palette Name', 'Name already used']}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save Palette\n            </Button>\n          </DialogActions>\n        </ValidatorForm>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PaletteMetaForm;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport PaletteIcon from '@material-ui/icons/Palette';\n\nimport { Button } from '@material-ui/core';\nimport { PaletteObj } from '../Types/DataModels.type';\nimport { Link } from 'react-router-dom';\nimport useStyles from './styles';\nimport PaletteMetaForm from '../PaletteMetaForm/PaletteMetaForm';\n\nexport type PaletteFormNavProps = {\n  open: boolean;\n  palettes: PaletteObj[];\n  handleSubmit: (paletteName: string, emoji: string) => void;\n  handleDrawerOpen: () => void;\n};\n\nconst PaletteFormNav: React.FC<PaletteFormNavProps> = ({\n  open,\n  palettes,\n  handleSubmit,\n  handleDrawerOpen\n}) => {\n  const classes = useStyles();\n  const [formShowing, setFormShowing] = useState(false);\n\n  const showForm = () => {\n    setFormShowing(true);\n  };\n\n  const hideForm = () => {\n    setFormShowing(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        color=\"default\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <PaletteIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Create a Palette\n          </Typography>\n        </Toolbar>\n        <div className={classes.navBtns}>\n          <Link to=\"/\">\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n            >\n              Go Back\n            </Button>\n          </Link>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={showForm}\n            className={classes.button}\n          >\n            Save\n          </Button>\n        </div>\n      </AppBar>\n      {formShowing && (\n        <PaletteMetaForm\n          palettes={palettes}\n          handleSubmit={handleSubmit}\n          hideForm={hideForm}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PaletteFormNav;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%'\n    },\n    picker: {\n      width: '100% !important',\n      marginTop: '3.2rem'\n    },\n    addColor: {\n      width: '100%',\n      padding: '1.6rem',\n      marginTop: '1.6rem',\n      fontSize: '3.2rem'\n    },\n    colorNameInput: {\n      width: '100%',\n      height: '7rem'\n    }\n  })\n);\n\nexport default useStyles;\n","import React, { useEffect } from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\n\nimport { Button } from '@material-ui/core';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport { Color } from '../Types/DataModels.type';\nimport useStyles from './styles';\n\nexport type ColorPickerFormProps = {\n  paletteIsFull: boolean;\n  addColor: (newColor: Color) => void;\n  colors: Color[];\n};\n\nconst ColorPickerForm: React.FC<ColorPickerFormProps> = ({\n  paletteIsFull,\n  addColor,\n  colors\n}) => {\n  const classes = useStyles();\n\n  const [currentColor, setCurrentColor] = React.useState<Color>({\n    name: 'black',\n    color: 'black'\n  });\n\n  const [newColorName, setNewColorName] = React.useState('');\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isColorNameUnique', (value: string) => {\n      return colors.every(\n        ({ name }) => name.toLowerCase() !== value.toLowerCase()\n      );\n    });\n\n    ValidatorForm.addValidationRule('isColorUnique', (value: string) => {\n      return colors.every((color) => color.color !== currentColor.color);\n    });\n  });\n\n  const updateCurrentColor = (color: ColorResult) => {\n    setCurrentColor({ name: newColorName, color: color.hex });\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.name === 'newColorName') {\n      setNewColorName(event.target.value);\n    }\n  };\n\n  const handleSumbit = () => {\n    const newColor = {\n      name: newColorName,\n      color: currentColor.color\n    };\n    addColor(newColor);\n    setNewColorName('');\n  };\n\n  return (\n    <div className={classes.root}>\n      <ChromePicker\n        onChangeComplete={updateCurrentColor}\n        color={currentColor.color}\n        className={classes.picker}\n      />\n      <ValidatorForm onSubmit={handleSumbit} instantValidate={false}>\n        <TextValidator\n          name=\"newColorName\"\n          className={classes.colorNameInput}\n          variant=\"filled\"\n          margin=\"normal\"\n          placeholder=\"Color Name\"\n          value={newColorName}\n          onChange={handleChange}\n          validators={['required', 'isColorNameUnique', 'isColorUnique']}\n          errorMessages={[\n            'Enter a color name',\n            'Color name must be unique',\n            'This color already exist'\n          ]}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={paletteIsFull}\n          style={{\n            backgroundColor: paletteIsFull ? 'grey' : currentColor.color\n          }}\n          type=\"submit\"\n          className={classes.addColor}\n        >\n          {paletteIsFull ? 'Palette Full' : 'Add Color'}\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default ColorPickerForm;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport useStyles from './styles';\nimport { Button } from '@material-ui/core';\nimport { Color, PaletteObj } from '../Types/DataModels.type';\nimport { AppSavePaletteFunc } from '../App/App';\nimport { RouteComponentProps } from 'react-router-dom';\nimport DraggableColorList from '../DraggableColorList/DraggableColorList';\nimport { arrayMove, SortEndHandler } from 'react-sortable-hoc';\nimport PaletteFormNav from '../PaletteFormNav/PaletteFormNav';\nimport ColorPickerForm from '../ColorPickerForm/ColorPickerForm';\nimport seedColors from '../seedColors';\n\ntype Props = RouteComponentProps & {\n  savePalette: AppSavePaletteFunc;\n  palettes: PaletteObj[];\n  maxNumOfPalette?: number;\n};\n\nfunction NewPaletteForm({\n  savePalette,\n  palettes,\n  maxNumOfPalette = 20,\n  history\n}: Props): JSX.Element {\n  // Styles sheet\n  const classes = useStyles();\n  const theme = useTheme();\n  // States\n  // Required for material-ui\n  const [open, setOpen] = React.useState(true);\n  const [colors, setColors] = React.useState<Color[]>(seedColors[0].colors);\n\n  // Required for material-ui\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  // Required for material-ui\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const addNewColor = (newColor: Color) => {\n    setColors([...colors, newColor]);\n\n    // setNewColorName('');\n  };\n\n  const paletteIsFull = colors.length >= maxNumOfPalette;\n\n  const handleSubmit = (newPaletteName: string, emoji: string) => {\n    const newPalette: PaletteObj = {\n      paletteName: newPaletteName,\n      id: newPaletteName.toLowerCase().replace(/ /g, '-'),\n      emoji: emoji,\n      colors: colors\n    };\n    savePalette(newPalette);\n    history.push('/');\n  };\n\n  const deleteColor = (colorName: string) => {\n    setColors(colors.filter((color) => color.name !== colorName));\n  };\n\n  const onSortEnd: SortEndHandler = ({ oldIndex, newIndex }) => {\n    setColors(arrayMove(colors, oldIndex, newIndex));\n  };\n\n  const allColors = seedColors.map((p) => p.colors).flat();\n\n  const addRandomColor = () => {\n    // Pick a random color from all the existing palettes\n    let randomIndex = Math.floor(Math.random() * allColors.length);\n    let randomColor = allColors[randomIndex];\n    // Check if there's exist a color box for it already\n    const isDuplicate =\n      colors.findIndex((color) => color.name === randomColor.name) !== -1;\n    if (isDuplicate) {\n      addRandomColor();\n    } else {\n      setColors([...colors, randomColor]);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <PaletteFormNav\n        open={open}\n        palettes={palettes}\n        handleSubmit={handleSubmit}\n        handleDrawerOpen={handleDrawerOpen}\n      />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.container}>\n          <Typography variant=\"h4\" gutterBottom>\n            Design Your Palette\n          </Typography>\n          <div className={classes.buttons}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => setColors([])}\n              className={classes.button}\n            >\n              Clear Palette\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={addRandomColor}\n              disabled={paletteIsFull}\n              className={classes.button}\n            >\n              {paletteIsFull ? 'Palette Full' : 'Random Color'}\n            </Button>\n          </div>\n          <ColorPickerForm\n            paletteIsFull={paletteIsFull}\n            addColor={addNewColor}\n            colors={colors}\n          />\n        </div>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <DraggableColorList\n          colors={colors}\n          deleteColor={deleteColor}\n          axis=\"xy\"\n          onSortEnd={onSortEnd}\n          distance={20}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default NewPaletteForm;\n","import { makeStyles, Theme } from '@material-ui/core';\nimport { createStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    '@global': {\n      '.page-enter': {\n        opacity: 0\n      },\n      '.page-enter-active': {\n        opacity: 1,\n        transition: 'opacity 300ms ease-in'\n      },\n      '.page-exit': {\n        opacity: 1\n      },\n      '.page-exit-active': {\n        opacity: 0,\n        transition: 'opacity 300ms ease-in'\n      }\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\nimport useStyles from './styles';\n\nexport type PageProps = {\n  slideDirection: 'up' | 'down' | 'left' | 'right';\n};\n\nconst Page: React.FC<React.PropsWithChildren<PageProps>> = (props) => {\n  const { children } = props;\n\n  useStyles(props);\n\n  return <section className=\"page\">{children}</section>;\n};\n\nexport default Page;\n","import React, { Component } from 'react';\nimport Palette from '../Palette/Palette';\nimport seedColors from '../seedColors';\nimport './App.css';\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { generatePalette } from '../Utilities/colorHelper';\nimport PaletteList from '../PaletteList/PaletteList';\nimport SingleColorPalette from '../SingleColorPalette/SingleColorPalette';\nimport { PaletteObj } from '../Types/DataModels.type';\nimport NewPaletteForm from '../NewPaletteForm/NewPaletteForm';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Page from '../Page/Page';\n\ntype Props = {};\n\ntype States = {\n  palettes: PaletteObj[];\n};\n\nclass App extends Component<Props, States> {\n  constructor(props: Props) {\n    super(props);\n    if (window.localStorage.getItem('palettes')) {\n      const savedPalettes: PaletteObj[] = JSON.parse(\n        window.localStorage.getItem('palettes')!\n      );\n      this.state = { palettes: savedPalettes };\n    } else {\n      this.state = { palettes: seedColors };\n    }\n    this.savePalette = this.savePalette.bind(this);\n    this.findPalette = this.findPalette.bind(this);\n    this.syncLocalStorage = this.syncLocalStorage.bind(this);\n    this.deletePalette = this.deletePalette.bind(this);\n  }\n\n  findPalette(id: string): PaletteObj {\n    const paletteFound = this.state.palettes.find(function (palette) {\n      return palette.id === id;\n    });\n    if (paletteFound) {\n      return paletteFound;\n    }\n    throw new Error('Palette not found!');\n  }\n\n  savePalette(newPalette: PaletteObj) {\n    this.setState(\n      { palettes: [...this.state.palettes, newPalette] },\n      this.syncLocalStorage\n    );\n  }\n\n  deletePalette(id: string) {\n    this.setState(\n      (st) => ({\n        palettes: st.palettes.filter((palette) => palette.id !== id)\n      }),\n      this.syncLocalStorage\n    );\n  }\n\n  syncLocalStorage() {\n    // Save palettes to local storage\n    window.localStorage.setItem(\n      'palettes',\n      JSON.stringify(this.state.palettes)\n    );\n  }\n\n  render() {\n    return (\n      <Route\n        render={({ location }) => (\n          <TransitionGroup>\n            <CSSTransition key={location.key} classNames=\"page\" timeout={300}>\n              <Switch location={location}>\n                <Route\n                  exact\n                  path=\"/palette/new\"\n                  render={(routeProps: RouteComponentProps) => (\n                    <Page slideDirection=\"left\">\n                      <NewPaletteForm\n                        savePalette={this.savePalette}\n                        palettes={this.state.palettes}\n                        {...routeProps}\n                      />\n                    </Page>\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/\"\n                  render={(routeProps: RouteComponentProps) => (\n                    <Page slideDirection=\"left\">\n                      <PaletteList\n                        deletePalette={this.deletePalette}\n                        palettes={this.state.palettes}\n                        {...routeProps}\n                      />\n                    </Page>\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/palette/:id\"\n                  render={(routeProps) => (\n                    <Page slideDirection=\"left\">\n                      <Palette\n                        palette={generatePalette(\n                          this.findPalette(routeProps.match.params.id)\n                        )}\n                      />\n                    </Page>\n                  )}\n                />\n                <Route\n                  path=\"/palette/:paletteId/:colorId\"\n                  render={(routeProps) => (\n                    <Page slideDirection=\"left\">\n                      <SingleColorPalette\n                        palette={generatePalette(\n                          this.findPalette(routeProps.match.params.paletteId)\n                        )}\n                        colorId={routeProps.match.params.colorId}\n                      />\n                    </Page>\n                  )}\n                />\n                <Route>\n                  <Redirect to=\"/\" />\n                </Route>\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        )}\n      />\n    );\n  }\n}\n\nexport type AppSavePaletteFunc = App['savePalette'];\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  typography: {\n    // Tell Material-UI what's the font-size on the html element is.\n    htmlFontSize: 10\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}